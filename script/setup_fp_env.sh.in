prefix=@prefix@
exec_prefix=@exec_prefix@
configdir=@configdir@
export PATH=@bindir@:${PATH}
export L2_EXE_PATH=@bindir@
export L2_FP_SRC_PATH=@abs_top_srcdir@
export abscodir=@abscodir@
export merradir=@merradir@
export L2_INPUT_PATH=@configdir@
export L2_SUPPORT_UTIL_PATH=@bindir@
if [ -n "@rubygemdir" ]; then
  if [ -n "$GEM_PATH" ]; then
    export GEM_PATH=@rubygemdir@:${GEM_PATH}
  else
    export GEM_PATH=@rubygemdir@
  fi
fi
if [ -n "$PYTHONPATH" ]; then
  export PYTHONPATH=@pythondir@:@pyexecdir@:${PYTHONPATH}
else
  export PYTHONPATH=@pythondir@:@pyexecdir@
fi
if [ -n "$LD_LIBRARY_PATH" ]; then
  export LD_LIBRARY_PATH=@libdir@:${LD_LIBRARY_PATH}
else
  export PYTHONPATH=@libdir@
fi
if [ -n "$LUA_PATH" ]; then
    export LUA_PATH="@configdir@/?.lua;${LUA_PATH}"
else
    export LUA_PATH="@configdir@/?.lua;"
fi
# Use same version of python that we used when we built the system
alias python=@PYTHON@
if [ -e `dirname @PYTHON@`/ipython ]; then
  alias ipython=`dirname @PYTHON@`/ipython
fi
# And use same version of ruby
# Use same version of python that we used when we built the system
alias ruby=@RUBY@
alias parallel=@PARALLEL@

# Select a newer version of gcc and python
# Note if you update this, also update ../pleiades_build.script
if [ -e /usr/share/modules/init/bash ]; then
    source /usr/share/modules/init/bash
    module load gcc/4.9.4
    module load /nasa/modulefiles/pkgsrc/sles12/python3/3.5.2
    # This contains ruby 2.2.6p396
    module load /nasa/modulefiles/pkgsrc/sles12/pkgsrc/2016Q4
    # Needed to get ruby working. Not sure why
    ulimit -Ss unlimited
fi

    


